{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrea Polini\\\\Documents\\\\React_2024\\\\React - Fitstic_2024\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// export default function App() {\n//   return <>\n//     <div className={styles.title}>\n//       <img src={logo} alt=\"logo\" />\n//       <div>Fitstic React 2024</div>\n//     </div>\n//     { /*<MyComponent /> */}\n//     <CyclicRenderingComponent />\n//   </>;\n// }\n\n// //ha la stessa funzione della function Sum con la differenza che la function ha valenza solo all'interno di MyComponent, mentre questa variabile const sum ha valenza in tutto il file\n// const sum=(n1:number, n2:number) => {return n1+n2};\n\n// export function MyComponent() {\n//   // function Sum(n1:number, n2:number){\n//   //   return n1+n2;\n//   // }\n\n//   let num:number=5;\n//   let str:string=\"ciao\";\n//   let bool:boolean=true;\n\n//   //Rendering condizionale con variabile di appoggio\n//   let val:JSX.Element;\n//   if(bool===true)\n//   {\n//     val=<div>bool è true</div>\n//   }\n//   else\n//   {\n//     val=<div>bool è false</div>\n//   }\n\n//   //Stampare qualcosa solo se è true, altrimenti non stampare nulla\n//   let val1:JSX.Element | null=null;\n//   if(bool===true)\n//   {\n//     val1=<div>bool è true</div>\n//   }\n\n//   //Lo switch può essere utilizzato ma non dentro al JSX -> JSX non supporta lo switch quindi devo per forza utilizzarlo mediante varibiabile di appoggio\n//   let varAppoggio;\n//   switch(num) {\n//     case 1:{ \n//       varAppoggio=<div>num è 1</div>;\n//       break;\n//     }\n//     case 2:{ \n//       varAppoggio=<div>num è 2</div>;\n//       break;\n//     }\n//     case 3:{ \n//       varAppoggio=<div>num è 3</div>;\n//       break;\n//     }\n//     default:{\n//       varAppoggio=<div>altro</div>;\n//       break;\n//     }\n//   }\n\n//   let varSomma=sum(2,3);\n//   //let varSomma=Sum(2,3);\n\n//   return <div>\n//   <div>myComponent!</div>\n//   <div>num:{num}</div>\n//   <div>str:{str}</div>\n//   <div>bool:{bool} Attenzione! I booleani non vengono visualizzati</div>\n//   {val}\n//   {/*Rendering condizionale con operatore ternario*/}\n//   {bool === true ? <div>bool è true</div> : <div>bool è false</div>} \n//   {/*Rendering con and logico -> Stampare qualcosa solo se la condizione è true, altrimenti nulla*/}\n//   {bool===true && <div>bool è true</div>}\n//   <div>Risultato somma: {varSomma}</div>\n//   <div>Risultato somma: {sum(4,3)}</div>\n//   {/*<div>Risultato somma: {Sum(4,3)}</div>*/}\n//   </div>;\n// }\n\n// export function CyclicRenderingComponent() {\n//   let array:number[]=[2,4,6,7];\n//   let arrayJSX=array.map(item => {return <div>Num:{item}</div>});\n\n//   let arrayDiJSX=[];\n//   for(let i=0; i<array.length;i++)\n//   {\n//     arrayDiJSX.push(<div key={i}>arrayDiJSX posizione {i} : {array[i]}</div>);\n//   }\n\n//   return <>\n//   <h4>Rendering ciclico</h4>\n//   {arrayJSX}\n//   {array.map((item,index) => {return <div key={index}>Num {index} : {item}</div>})}\n//   {arrayDiJSX}\n//   </>\n// }\n\nexport default function App() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [value, setValue] = useState(10);\n  const [interval, setInterval] = useState(0);\n  function calcolo(n) {\n    console.log(\"Esecuzione calcolo con n: \", n);\n    return n * 2;\n  }\n\n  //Se nello useEffect si definisce come lista di dipendenze l'array vuoto [], allora viene invocato l'effetto al mount del componente\n  useEffect(() => {\n    console.log(\"useEffect evento di mount!\");\n    return () => {\n      console.log(\"useEffect evento di unmount!\");\n    };\n  }, []); //React invoca l'effetto solo nel momento di montaggio del componente\n\n  //Non c'è limite al numero di useEffect che si possono definire\n  useEffect(() => {\n    console.log(\"useEffect evento di mount2!\");\n  }, []);\n  console.log(\"App()\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"qDFAr2p8dIn6SOkuNDWkC1w9Lg8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","text","setText","name","setName","surname","setSurname","value","setValue","interval","setInterval","calcolo","n","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andrea Polini/Documents/React_2024/React - Fitstic_2024/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './App.module.scss';\nimport logo from \"./assets/logo512.png\";\nimport Display from './components/Display';\nimport Counter from './components/Counter';\nimport TextComponent from './components/TextComponent';\nimport CounterWithObjectState from './components/CounterWithObjectState';\nimport { MyCustomInput } from './components/MyCustomInput';\nimport { PersonInput } from './components/Exercise1/PersonInput';\nimport { MiddleComponent } from './components/MiddleComponent';\nimport Timer from './components/Timer';\nimport ToDoList from './components/ToDoList/ToDoList';\nimport { Button } from 'antd';\n\n\n// export default function App() {\n//   return <>\n//     <div className={styles.title}>\n//       <img src={logo} alt=\"logo\" />\n//       <div>Fitstic React 2024</div>\n//     </div>\n//     { /*<MyComponent /> */}\n//     <CyclicRenderingComponent />\n//   </>;\n// }\n\n// //ha la stessa funzione della function Sum con la differenza che la function ha valenza solo all'interno di MyComponent, mentre questa variabile const sum ha valenza in tutto il file\n// const sum=(n1:number, n2:number) => {return n1+n2};\n\n// export function MyComponent() {\n//   // function Sum(n1:number, n2:number){\n//   //   return n1+n2;\n//   // }\n\n\n//   let num:number=5;\n//   let str:string=\"ciao\";\n//   let bool:boolean=true;\n\n//   //Rendering condizionale con variabile di appoggio\n//   let val:JSX.Element;\n//   if(bool===true)\n//   {\n//     val=<div>bool è true</div>\n//   }\n//   else\n//   {\n//     val=<div>bool è false</div>\n//   }\n\n//   //Stampare qualcosa solo se è true, altrimenti non stampare nulla\n//   let val1:JSX.Element | null=null;\n//   if(bool===true)\n//   {\n//     val1=<div>bool è true</div>\n//   }\n\n//   //Lo switch può essere utilizzato ma non dentro al JSX -> JSX non supporta lo switch quindi devo per forza utilizzarlo mediante varibiabile di appoggio\n//   let varAppoggio;\n//   switch(num) {\n//     case 1:{ \n//       varAppoggio=<div>num è 1</div>;\n//       break;\n//     }\n//     case 2:{ \n//       varAppoggio=<div>num è 2</div>;\n//       break;\n//     }\n//     case 3:{ \n//       varAppoggio=<div>num è 3</div>;\n//       break;\n//     }\n//     default:{\n//       varAppoggio=<div>altro</div>;\n//       break;\n//     }\n//   }\n\n//   let varSomma=sum(2,3);\n//   //let varSomma=Sum(2,3);\n\n//   return <div>\n//   <div>myComponent!</div>\n//   <div>num:{num}</div>\n//   <div>str:{str}</div>\n//   <div>bool:{bool} Attenzione! I booleani non vengono visualizzati</div>\n//   {val}\n//   {/*Rendering condizionale con operatore ternario*/}\n//   {bool === true ? <div>bool è true</div> : <div>bool è false</div>} \n//   {/*Rendering con and logico -> Stampare qualcosa solo se la condizione è true, altrimenti nulla*/}\n//   {bool===true && <div>bool è true</div>}\n//   <div>Risultato somma: {varSomma}</div>\n//   <div>Risultato somma: {sum(4,3)}</div>\n//   {/*<div>Risultato somma: {Sum(4,3)}</div>*/}\n//   </div>;\n// }\n\n// export function CyclicRenderingComponent() {\n//   let array:number[]=[2,4,6,7];\n//   let arrayJSX=array.map(item => {return <div>Num:{item}</div>});\n\n//   let arrayDiJSX=[];\n//   for(let i=0; i<array.length;i++)\n//   {\n//     arrayDiJSX.push(<div key={i}>arrayDiJSX posizione {i} : {array[i]}</div>);\n//   }\n\n//   return <>\n//   <h4>Rendering ciclico</h4>\n//   {arrayJSX}\n//   {array.map((item,index) => {return <div key={index}>Num {index} : {item}</div>})}\n//   {arrayDiJSX}\n//   </>\n// }\n\nexport default function App() {\n  const [text, setText]=useState(\"\");\n  const [name, setName]=useState(\"\");\n  const [surname, setSurname]=useState(\"\");\n  const [value, setValue]=useState(10);\n  const [interval, setInterval]=useState(0);\n\n  function calcolo (n:number){\n    console.log(\"Esecuzione calcolo con n: \",n);\n    return n*2;\n  }\n\n  //Se nello useEffect si definisce come lista di dipendenze l'array vuoto [], allora viene invocato l'effetto al mount del componente\n  useEffect(() => {\n    console.log(\"useEffect evento di mount!\");\n    return () => {\n      console.log(\"useEffect evento di unmount!\");\n    };\n  },[]);//React invoca l'effetto solo nel momento di montaggio del componente\n  \n  //Non c'è limite al numero di useEffect che si possono definire\n  useEffect(() => {\n    console.log(\"useEffect evento di mount2!\");\n  },[]);\n\n  console.log(\"App()\");\n\n  return <>\n    <div><h1>App</h1></div>\n    {/* <Counter /> */}\n\n    {/* Differenza tra cambio di una prop qualsiasi e cambio della prop key:\n        - se cambia la prorp qualsiasi, il componente viene RIDISEGNATO\n        - se cambia la prop key, il componente viene REINIZIALIZZATO (tutti gli stati tornano al valore iniziale)  \n      */}\n    {/* <Counter initialValue={value}/> */}\n    {/* <Counter key={value} />\n    <button onClick={() => {setValue(20)}}>imposta a 20</button>\n    <div>Value: {value}</div> */}\n\n    {/* <TextComponent /> */}\n    \n    {/* <CounterWithObjectState /> */}\n    \n                                                  {/*Implementazione della callback */}\n    {/* <MyCustomInput required={true} label='Username' onChange={(text => {\n      console.log(text);\n      setText(text);\n    })} />\n    <div>Testo in App.tsx: {text}</div> */}\n    \n    {/* <MyCustomInput required={false} label='Password' /> */}\n    \n    {/* <MiddleComponent onChange={(text => {\n      console.log(text);\n      setText(text);\n    })} />\n    <div>Testo in App.tsx: {text}</div> */}\n\n    {/* {value !== 20 && <Timer />} */}\n\n    {/* ESERCIZIO - 1 */}\n     {/* <PersonInput onSave={(persona:{name:string, surname:string}) => {\n    console.log(\"Input della callback\",persona);\n    setName(persona.name);\n    setSurname(persona.surname);}}/>\n    <div>Nome: {name}</div>\n    <div>Cognome: {surname}</div> */}\n\n    {/* ESERCIZIO - 2 */}\n    {/* <ToDoList /> */}\n\n\n  </>\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAenD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAChB,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASiB,OAAOA,CAAEC,CAAQ,EAAC;IACzBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAACF,CAAC,CAAC;IAC3C,OAAOA,CAAC,GAAC,CAAC;EACZ;;EAEA;EACAnB,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC;EACH,CAAC,EAAC,EAAE,CAAC,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC,EAAC,EAAE,CAAC;EAELD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAEpB,oBAAOlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACLnB,OAAA;MAAAmB,QAAA,eAAKnB,OAAA;QAAAmB,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBA6CvB,CAAC;AACL;AAACnB,EAAA,CA1EuBD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}