{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrea Polini\\\\Documents\\\\React_2024\\\\fitstic-react-2024-main\\\\src\\\\components\\\\Counter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Display from './Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Counter(props) {\n  _s();\n  const {\n    initialValue = 0\n  } = props;\n\n  //Definizione di uno stato di tipo number\n  //inizializzato a ad un valore iniziale passato come parametro\n  const [contatore, setContatore] = useState(initialValue); //useStato(<valoreIniziale>) \n  //setContatore è una funzione che mi consente di assegnare un nuovo valore alla variabie contatore\n\n  useEffect(() => {\n    console.log(\"useEffect in azione\");\n    setContatore(initialValue);\n  }, [initialValue]);\n  //useEffect(()=>{effetto}/operazioneDaSvolgere,[arrayDiParametriDaControllareIlCambiamento])\n\n  console.log(\"Counter()\", contatore);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      n: contatore,\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), contatore > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Attenzione! - Contatore maggiore di 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      n: 5,\n      color: \"grey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      n: 4,\n      obj: {\n        x: 1,\n        y: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setContatore(contatore + 1);\n\n        //Funzionamento di setContatore\n        //setContatore(contatore+1);\n        //setContatore(contatore+2);\n        //in questo caso qui il contatore aumenta ogni volta di 2; viene considerato sempre l'utlima set.\n\n        // setContatore(partial => partial + 1);\n        // setContatore(partial => partial + 2);\n        //in questo caso, utilizzando l'arrow function si sommano i vari setContatore, quindi il counter aumenta ogni volta di 3\n\n        console.log(\"Click! - contatore:\", contatore);\n      },\n      children: \"premi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Counter, \"iHrAtz8wRgLuevJmh1v1ZKJp1Bc=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useEffect","useState","Display","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","props","_s","initialValue","contatore","setContatore","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","n","color","obj","x","y","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andrea Polini/Documents/React_2024/fitstic-react-2024-main/src/components/Counter.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Display from './Display';\r\n\r\nexport default function Counter(props: {\r\n  readonly initialValue?: number;\r\n}) {\r\n  const { initialValue = 0 } = props;\r\n\r\n  //Definizione di uno stato di tipo number\r\n  //inizializzato a ad un valore iniziale passato come parametro\r\n  const [contatore, setContatore] = useState(initialValue); //useStato(<valoreIniziale>) \r\n  //setContatore è una funzione che mi consente di assegnare un nuovo valore alla variabie contatore\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect in azione\");\r\n    setContatore(initialValue);\r\n  },[initialValue]);\r\n  //useEffect(()=>{effetto}/operazioneDaSvolgere,[arrayDiParametriDaControllareIlCambiamento])\r\n\r\n  console.log(\"Counter()\", contatore);\r\n\r\n  return <>\r\n    <div>Counter</div>\r\n    <Display n={contatore} color=\"blue\" />\r\n    {contatore > 5 && <div>Attenzione! - Contatore maggiore di 5</div>}\r\n    <Display n={5} color=\"grey\" />\r\n    <Display n={4} obj={{ x: 1, y: 2 }} />\r\n    <button onClick={() => {\r\n      setContatore(contatore + 1);\r\n\r\n      //Funzionamento di setContatore\r\n      //setContatore(contatore+1);\r\n      //setContatore(contatore+2);\r\n      //in questo caso qui il contatore aumenta ogni volta di 2; viene considerato sempre l'utlima set.\r\n\r\n      // setContatore(partial => partial + 1);\r\n      // setContatore(partial => partial + 2);\r\n      //in questo caso, utilizzando l'arrow function si sommano i vari setContatore, quindi il counter aumenta ogni volta di 3\r\n\r\n      console.log(\"Click! - contatore:\", contatore);\r\n    }}>premi</button>\r\n  </>\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,OAAOA,CAACC,KAE/B,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,YAAY,GAAG;EAAE,CAAC,GAAGF,KAAK;;EAElC;EACA;EACA,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC;EAC1D;;EAEAV,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCF,YAAY,CAACF,YAAY,CAAC;EAC5B,CAAC,EAAC,CAACA,YAAY,CAAC,CAAC;EACjB;;EAEAG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEnC,oBAAOP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACLX,OAAA;MAAAW,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBf,OAAA,CAACF,OAAO;MAACkB,CAAC,EAAET,SAAU;MAACU,KAAK,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrCR,SAAS,GAAG,CAAC,iBAAIP,OAAA;MAAAW,QAAA,EAAK;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClEf,OAAA,CAACF,OAAO;MAACkB,CAAC,EAAE,CAAE;MAACC,KAAK,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Bf,OAAA,CAACF,OAAO;MAACkB,CAAC,EAAE,CAAE;MAACE,GAAG,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCf,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAM;QACrBb,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;;QAE3B;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEAE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,SAAS,CAAC;MAC/C,CAAE;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACjB,CAAC;AACL;AAACV,EAAA,CAvCuBF,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}